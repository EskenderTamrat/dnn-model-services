# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from service.model import ObjectDetection_ImageRecon_pb2 as service_dot_model_dot_ObjectDetection__ImageRecon__pb2


class DetectReconStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.detect_recon = channel.unary_unary(
        '/DetectRecon/detect_recon',
        request_serializer=service_dot_model_dot_ObjectDetection__ImageRecon__pb2.ObjDetImgReconRequest.SerializeToString,
        response_deserializer=service_dot_model_dot_ObjectDetection__ImageRecon__pb2.Result.FromString,
        )


class DetectReconServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def detect_recon(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DetectReconServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'detect_recon': grpc.unary_unary_rpc_method_handler(
          servicer.detect_recon,
          request_deserializer=service_dot_model_dot_ObjectDetection__ImageRecon__pb2.ObjDetImgReconRequest.FromString,
          response_serializer=service_dot_model_dot_ObjectDetection__ImageRecon__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'DetectRecon', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
