# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from service.model import resnet_img_recon_pb2 as service_dot_model_dot_resnet__img__recon__pb2


class FlowersStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.flowers = channel.unary_unary(
        '/Flowers/flowers',
        request_serializer=service_dot_model_dot_resnet__img__recon__pb2.ImageReconRequest.SerializeToString,
        response_deserializer=service_dot_model_dot_resnet__img__recon__pb2.Result.FromString,
        )


class FlowersServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def flowers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FlowersServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'flowers': grpc.unary_unary_rpc_method_handler(
          servicer.flowers,
          request_deserializer=service_dot_model_dot_resnet__img__recon__pb2.ImageReconRequest.FromString,
          response_serializer=service_dot_model_dot_resnet__img__recon__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Flowers', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class DogsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.dogs = channel.unary_unary(
        '/Dogs/dogs',
        request_serializer=service_dot_model_dot_resnet__img__recon__pb2.ImageReconRequest.SerializeToString,
        response_deserializer=service_dot_model_dot_resnet__img__recon__pb2.Result.FromString,
        )


class DogsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def dogs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DogsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'dogs': grpc.unary_unary_rpc_method_handler(
          servicer.dogs,
          request_deserializer=service_dot_model_dot_resnet__img__recon__pb2.ImageReconRequest.FromString,
          response_serializer=service_dot_model_dot_resnet__img__recon__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Dogs', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CarsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.cars = channel.unary_unary(
        '/Cars/cars',
        request_serializer=service_dot_model_dot_resnet__img__recon__pb2.ImageReconRequest.SerializeToString,
        response_deserializer=service_dot_model_dot_resnet__img__recon__pb2.Result.FromString,
        )


class CarsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def cars(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CarsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'cars': grpc.unary_unary_rpc_method_handler(
          servicer.cars,
          request_deserializer=service_dot_model_dot_resnet__img__recon__pb2.ImageReconRequest.FromString,
          response_serializer=service_dot_model_dot_resnet__img__recon__pb2.Result.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Cars', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
