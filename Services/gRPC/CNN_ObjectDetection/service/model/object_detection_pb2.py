# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service/model/object_detection.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='service/model/object_detection.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n$service/model/object_detection.proto\"M\n\x16ObjectDetectionRequest\x12\r\n\x05model\x18\x01 \x01(\t\x12\x10\n\x08img_path\x18\x02 \x01(\t\x12\x12\n\nconfidence\x18\x03 \x01(\t\"g\n\x06Result\x12\x12\n\ndelta_time\x18\x01 \x01(\t\x12\r\n\x05\x62oxes\x18\x02 \x01(\t\x12\x11\n\tclass_ids\x18\x03 \x01(\t\x12\x13\n\x0b\x63onfidences\x18\x04 \x01(\t\x12\x12\n\nimg_base64\x18\x05 \x01(\t26\n\x06\x44\x65tect\x12,\n\x06\x64\x65tect\x12\x17.ObjectDetectionRequest\x1a\x07.Result\"\x00\x62\x06proto3')
)




_OBJECTDETECTIONREQUEST = _descriptor.Descriptor(
  name='ObjectDetectionRequest',
  full_name='ObjectDetectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='ObjectDetectionRequest.model', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='img_path', full_name='ObjectDetectionRequest.img_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='ObjectDetectionRequest.confidence', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=117,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='delta_time', full_name='Result.delta_time', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='boxes', full_name='Result.boxes', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='class_ids', full_name='Result.class_ids', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidences', full_name='Result.confidences', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='img_base64', full_name='Result.img_base64', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=119,
  serialized_end=222,
)

DESCRIPTOR.message_types_by_name['ObjectDetectionRequest'] = _OBJECTDETECTIONREQUEST
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ObjectDetectionRequest = _reflection.GeneratedProtocolMessageType('ObjectDetectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTDETECTIONREQUEST,
  __module__ = 'service.model.object_detection_pb2'
  # @@protoc_insertion_point(class_scope:ObjectDetectionRequest)
  ))
_sym_db.RegisterMessage(ObjectDetectionRequest)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'service.model.object_detection_pb2'
  # @@protoc_insertion_point(class_scope:Result)
  ))
_sym_db.RegisterMessage(Result)



_DETECT = _descriptor.ServiceDescriptor(
  name='Detect',
  full_name='Detect',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=224,
  serialized_end=278,
  methods=[
  _descriptor.MethodDescriptor(
    name='detect',
    full_name='Detect.detect',
    index=0,
    containing_service=None,
    input_type=_OBJECTDETECTIONREQUEST,
    output_type=_RESULT,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DETECT)

DESCRIPTOR.services_by_name['Detect'] = _DETECT

# @@protoc_insertion_point(module_scope)
